# Entrada: Recebe logs do MikroTik via porta UDP 514
input {
  udp {
    port => 514
    codec => "line"
    type => "mikrotik_firewall"
  }
}

# Filtro: Processa e enriquece os logs
filter {
  # Debug: Mostra a mensagem recebida
  mutate {
    add_field => { "debug_message" => "%{message}" }
  }

  # Extrai os campos do log de firewall do MikroTik
  grok {
    match => {
      "message" => "firewall,info %{GREEDYDATA:device}: %{GREEDYDATA:chain} : in:%{NOTSPACE:in_interface} out:%{NOTSPACE:out_interface}, packet-mark:%{NOTSPACE:packet_mark} connection-mark:%{NOTSPACE:connection_mark} connection-state:%{WORD:connection_state},%{GREEDYDATA:extra_info} proto %{WORD:protocol} %{GREEDYDATA:protocol_flags}, %{IP:src_ip}:%{INT:src_port}->%{IP:dst_ip}:%{INT:dst_port}, NAT %{GREEDYDATA:nat_info}, len %{INT:length}"
    }
  }

  # Converte o tipo de dados de alguns campos
  mutate {
    convert => {
      "src_port" => "integer"
      "dst_port" => "integer"
      "length" => "integer"
    }
  }

  # Adiciona timestamp
  date {
    match => [ "@timestamp", "ISO8601" ]
    target => "@timestamp"
  }
}

# Saída: Envia os dados processados para o Elasticsearch
output {
  # Saída de debug para ver os logs recebidos
  stdout { 
    codec => rubydebug 
  }
  
  # Saída para o Elasticsearch
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "mikrotik-firewall-%{+YYYY.MM.dd}"
  }
} 